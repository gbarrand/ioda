// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file exlib.license for terms.

#ifndef exlib_exa_hiv
#define exlib_exa_hiv

#include <inlib/sg/view_evd>

#include "../iv/so2sg"

namespace exlib {
namespace exa {

inline inlib::sg::return_action hiv(inlib::sg::gui_viewer& a_gv) {

  //////////////////////////////////////////////////////////
  /// read atlas_hiv.root //////////////////////////////////////
  //////////////////////////////////////////////////////////

  std::string file = a_gv.res_dir();
  file += inlib::sep();
  file += "atlas_evt_1.iv";

  //bool done;
  //a_gv.opener().open(file,inlib::file::s_format_guessed(),inlib::args(),done);

  //////////////////////////////////////////////////////////
  /// create sg ////////////////////////////////////////////
  //////////////////////////////////////////////////////////

  inlib::sg::view_evd* _evd = inlib::sg::cast_view_evd(a_gv);
  if(!_evd) return inlib::sg::return_none;

  if(!_evd->is_evd()) _evd->create_sg_evd(20000);

  inlib::sg::separator& dsep = _evd->detector_sg();

  inlib::sg::separator* sep = new inlib::sg::separator;
  dsep.add(sep);

  inlib::sg::matrix* mtx = new inlib::sg::matrix;
  sep->add(mtx);

  iv::so2sg* node = new iv::so2sg;
  node->name = file;
  node->center_scene = true; //so that cube manip be centered on the model coming from iv.
  node->update_sg(a_gv.out(),a_gv.width(),a_gv.height());
  node->reset_touched(); //to not load file twice.
  const inlib::vec3f& center = node->read_center();
  sep->add(node);

  mtx->set_translate(center);

  a_gv.hide_main_menu();

  return inlib::sg::return_to_render;
}

}}

//exlib_build_use inlib CoinGL HEPVis zlib kernel

#endif

