// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file exlib.license for terms.

#ifndef exlib_iv_state2socam
#define exlib_iv_state2socam

#include <inlib/sg/state>

#include <inlib/mathf>

#include <Inventor/nodes/SoPerspectiveCamera.h>
#include <Inventor/nodes/SoOrthographicCamera.h>

namespace exlib {
namespace iv {

inline SoCamera* state2socam(const inlib::sg::state& a_state) {
  SoCamera* _camera = 0;
  const inlib::vec4f& _lrbt = a_state.m_camera_lrbt;
  if(a_state.m_camera_ortho) {
    SoOrthographicCamera* ocamera = new SoOrthographicCamera;
    _camera = ocamera;
    ocamera->height = _lrbt[3]-_lrbt[2];
  } else {
    SoPerspectiveCamera* pcamera = new SoPerspectiveCamera;
    _camera = pcamera;
    float h_2 = 0.5f*(_lrbt[3]-_lrbt[2]); //b-t
    pcamera->heightAngle = 2.0f*inlib::fatan2(h_2,a_state.m_camera_znear);
  }
  _camera->nearDistance = a_state.m_camera_znear;
  _camera->farDistance = a_state.m_camera_zfar;
  const inlib::vec3f& _v = a_state.m_camera_position;
  _camera->position = SbVec3f(_v[0],_v[1],_v[2]);
  const inlib::rotf& _r = a_state.m_camera_orientation;
  _camera->orientation = SbRotation(_r.quat().data());
  return _camera;
}

}}

//exlib_build_use inlib CoinGL

#endif
