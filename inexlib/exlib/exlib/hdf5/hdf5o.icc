
#include <cstdlib>

namespace exlib {
namespace hdf5 {

inline hdf5o::hdf5o(int a_level)
:m_compress(1)
,m_scalar(failure())
,m_simple(failure())
,m_CPT(failure())
{
  if(a_level<0) a_level = 0;
  if(a_level>9) a_level = 9;
  m_compress = a_level;

  m_scalar = ::H5Screate(H5S_SCALAR);
  if(m_scalar<0) {
    m_scalar = failure();
  }

  // For write_object :
 {hsize_t sz = 1;
  m_simple = ::H5Screate_simple(1,&sz,NULL);
  if(m_simple<0) {
     m_simple = failure();
  }}

  if(m_compress) {
    m_CPT = ::H5Pcreate(H5P_DATASET_CREATE);
    if(m_CPT<0) {
      m_CPT = failure();
    } else {
      if(::H5Pset_layout(m_CPT,H5D_COMPACT)<0) { 
        ::H5Pclose(m_CPT);
        m_CPT = failure();
      } else {
        hsize_t sz = 1;
        if(::H5Pset_chunk(m_CPT,1,&sz)<0) {
          ::H5Pclose(m_CPT);
          m_CPT = failure();
        } else {
          if(::H5Pset_deflate(m_CPT,m_compress)<0) {
            ::H5Pclose(m_CPT);
            m_CPT = failure();
          }
        }
      }
    }
  } else {
    m_CPT = ::H5Pcopy(H5P_DEFAULT);
  }
}

}}
