// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_mathz
#define inlib_mathz

#include <complex>

namespace inlib {

  //double
  inline double _fabs(const std::complex<double>& a_z) {return std::abs(a_z);}
  //inline std::complex<double> _conj(const std::complex<double>& a_z) {return std::conj(a_z);}

  //inline void set_i(std::complex<double>& a_i) {a_i = std::complex<double>(0,1);} //with inlib::symbol.

  inline double cfabs(const std::complex<double>& a_z) {return std::abs(a_z);}
  inline std::complex<double> cconj(const std::complex<double>& a_z) {return std::conj(a_z);}

  inline double creal(const std::complex<double>& a_z) {return std::real(a_z);}
  inline double cimag(const std::complex<double>& a_z) {return std::imag(a_z);}

  //long double
#ifndef ANDROID
  inline long double cfabsld(const std::complex<long double>& a_z) {return std::abs(a_z);}
  inline std::complex<long double> cconjld(const std::complex<long double>& a_z) {return std::conj(a_z);}
  inline long double crealld(const std::complex<long double>& a_z) {return std::real(a_z);}
  inline long double cimagld(const std::complex<long double>& a_z) {return std::imag(a_z);}
#endif


}

#endif
