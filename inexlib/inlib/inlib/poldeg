// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_poldeg
#define inlib_poldeg

// used in BatchLab.

#include "touplow"
#include "srep"
#include "sto"

namespace inlib {

inline bool polynomial_degree(const std::string& a_string,unsigned int& a_degree){
  // a_string = [p,P,Polynomial]<integer degree>
  // We extract <degree> from the upper.
  // The degree is the maximum "x" power.
  // For example P1 is ax+b which of degree 1.
  // For example P2 is ax*x+bx+c which of degree 2.
  std::string s = a_string;
  tolowercase(s);
  replace(s,"polynomial","p");
  a_degree = 0;
  if(s.size()<=0) return false;
  if(s[0]!='p') return false;
  unsigned int number = 0;
  if(!to<unsigned int>(s.substr(1,s.size()-1),number)) return false;
  a_degree = number;
  return true;
}

}

#endif
