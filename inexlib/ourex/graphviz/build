#!/bin/sh -f

bush_home=../../../bush

. ${bush_home}/args
. ${bush_home}/ourex_header

if [ ${build_compile} = "yes" ] ; then

if [ ${build_visual} = "yes" ] ; then
  ccflags="${ccflags} -wd4244" # cvt double in float or int.
  ccflags="${ccflags} -wd4113"
  ccflags="${ccflags} -wd4018" # incompt signed/unsigned.
  ccflags="${ccflags} -wd4305" # trunc double to float.
  ccflags="${ccflags} -wd4273" # liaison DLL inchoherent
else
  if [ ${build_clang} = "yes" -o ${build_sdk_mac} = "yes" -o ${build_sdk_ios} = "yes" ] ; then
    ccflags="${ccflags} -Wno-unused-value -Wno-pointer-sign"
    ccflags="${ccflags} -Wno-tautological-compare"
    # remove some warnings, but some usage of abs() are really suspicious :
    ccflags="${ccflags} -Wno-absolute-value"
    # quiet old clang (for exa 3.4) that does not have the upper warning.
    ccflags="${ccflags} -Wno-unknown-warning-option"
  fi
  if [ `uname` = "Linux" ] ; then
    ccflags="${ccflags} -Wno-unused-result"
  fi
fi

#if [ ${build_debug} = "yes" ] ; then
#  ccflags="${ccflags} -DDEBUG"
#fi

ccflags="${ccflags} -I."
ccflags="${ccflags} -I./lib/cdt"
ccflags="${ccflags} -I./lib/graph"
ccflags="${ccflags} -I./lib/xdot"
ccflags="${ccflags} -I./lib/common"
ccflags="${ccflags} -I./lib/sparse"
ccflags="${ccflags} -I./lib/pack"
ccflags="${ccflags} -I./lib/neatogen"
ccflags="${ccflags} -I./lib/fdpgen"
ccflags="${ccflags} -I./lib/pathplan"
ccflags="${ccflags} -I./lib/gvc"
ccflags="${ccflags} -I./lib/dotgen"

dirs=""
dirs="${dirs} ./lib/cdt ./lib/graph ./lib/pack ./lib/dotgen"
dirs="${dirs} ./lib/neatogen ./lib/sparse ./lib/pathplan"
dirs="${dirs} ./lib/fdpgen ./lib/xdot ./lib/common ./lib/gvc"

# plugins :
dirs="${dirs} ./plugin/dot_layout"
dirs="${dirs} ./plugin/core"

for dir in ${dirs} ; do

/bin/rm -f tmp_0
find ${dir} -name '*.c' -print >> tmp_0
for file in $(cat tmp_0) ; do
  oname=`basename ${file}`
  do_it=yes
  if [ ${build_debug} = "no" ] ; then
    if [ ${oname} = "dbg.c" ] ; then do_it=no; fi
  fi
  if [ ${do_it} = "yes" ] ; then
    cfiles="${cfiles} ${file}"
  fi
done
/bin/rm -f tmp_0

done

build_diro=yes

. ${bush_home}/compile

fi # end build_compile
 
if [ ${build_archive} = "yes" ] ; then . ${bush_home}/archive; fi

. ${bush_home}/clean
