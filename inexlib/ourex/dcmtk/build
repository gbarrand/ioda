#!/bin/sh -f

bush_home=../../../bush

. ${bush_home}/args
. ${bush_home}/ourex_header

if [ ${build_compile} = "yes" ] ; then

#if [ ${build_debug} = "yes" ] ; then
#  ccflags="${ccflags} -DDEBUG"
#fi

if [ `uname` = "Linux" ] ; then
  cppflags="${cppflags} -Wno-unused-result"
fi

if [ ${build_clang} = "yes" ] ; then
  if [ ${build_cxx11} = "yes" ] ; then
    cppflags="${cppflags} -Wno-deprecated-register"
  fi
fi

ccflags="${ccflags} -I."
ccflags="${ccflags} -I./config/include"

cppflags="${cppflags} -I."
cppflags="${cppflags} -I./config/include"
cppflags="${cppflags} -I./ofstd/include"
cppflags="${cppflags} -I./oflog/include"

cppflags="${cppflags} -I./dcmdata/include"
cppflags="${cppflags} -I./dcmimgle/include"
cppflags="${cppflags} -I./dcmimage/include"

#NOTE : we have arranged cfunix.h and osconfig.h to avoid any -D.
#cppflags="${cppflags} -DHAVE_CONFIG_H -DUSE_NULL_SAFE_OFSTRING -DNDEBUG"

dirs=""
dirs="${dirs} ./ofstd/libsrc"
dirs="${dirs} ./oflog/libsrc"
dirs="${dirs} ./dcmdata/libsrc"
dirs="${dirs} ./dcmimgle/libsrc"
dirs="${dirs} ./dcmimage/libsrc"
for dir in ${dirs} ; do
  find ${dir} -name '*.c'  -print >> c_tmp
  find ${dir} -name '*.cc' -print >> cpp_tmp
done

#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////

exclude=
#exclude="${exclude} dcdictbi.cc"
exclude="${exclude} dcdictzz.cc cmdlnarg.cc mkdictbi.cc mkdeftag.cc"
if [ ${build_visual} = "yes" ] ; then
  exclude="${exclude} unixsock.cc"
else
  exclude="${exclude} threads.cc winconap.cc windebap.cc winsock.cc ntelogap.cc"
fi

for exc in ${exclude} ; do
  grep -v ${exc} c_tmp  > tmp_0;/bin/mv tmp_0 c_tmp
  grep -v ${exc} cpp_tmp > tmp_0;/bin/mv tmp_0 cpp_tmp
done

#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////
if [ ${build_visual} = "yes" ] ; then
  libs="${libs} wsock32.lib"
  # to link dcmtk/oflog/libsrc/ntelogap.cc
  libs="${libs} advapi32.lib"
  # to link dcmtk/dcmdata/libsrc/dcuid.cc/Netbios
  libs="${libs} netapi32.lib"
fi
#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////
#///////////////////////////////////////////////////////

. ${bush_home}/compile

fi # end build_compile
 
if [ ${build_archive} = "yes" ] ; then . ${bush_home}/archive; fi

if [ ${build_app} = "yes" ] ; then

  cppflags="${cppflags} -I./config/include"
  cppflags="${cppflags} -I./ofstd/include"
  cppflags="${cppflags} -I./oflog/include"
  cppflags="${cppflags} -I./dcmdata/include"

  use_archive=yes
  . ${bush_home}/preplib

  if [ ${build_visual} = "yes" ] ; then
    libs="${libs} wsock32.lib"
    libs="${libs} advapi32.lib"
    libs="${libs} netapi32.lib"
  fi

  objs=
  app_exe=simple
  app_src=./simple.cpp
  . ${bush_home}/application

fi

. ${bush_home}/clean
